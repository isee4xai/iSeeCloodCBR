

service: clood-cbr

provider:
  name: aws
  runtime: python3.7
  region: eu-west-2
  stage: dev

functions:
  auth:
    handler: handler.auth
  authenticate:
    handler: handler.authenticate
    events:
      - http:
          path: /auth
          method: post
          cors: true
  home:
    handler: handler.home
    events:
      - http:
          path: /
          method: get
          cors: true
          authorizer: auth
  all_projects:
    handler: handler.all_projects
    events:
      - http:
          path: project
          method: get
          cors: true
          authorizer: auth
  get_project:
    handler: handler.get_project
    events:
      - http:
          path: project/{id}
          method: get
          cors: true
          authorizer: auth
  new_project:
    handler: handler.new_project
    events:
      - http:
          path: project
          method: post
          cors: true
          authorizer: auth
  update_project:
    handler: handler.update_project
    timeout: 900 # default is 6
    events:
      - http:
          path: project/{id}
          method: put
          cors: true
          authorizer: auth
  delete_project:
    handler: handler.delete_project
    events:
      - http:
          path: project/{id}
          method: delete
          cors: true
          authorizer: auth
  create_index:
    handler: handler.create_project_index
    events:
      - http:
          path: project/mapping/{id}
          method: get
          cors: true
          authorizer: auth
  save_case_list:
    handler: handler.save_case_list
    timeout: 900 # default is 6
    events:
      - http:
          path: case/{id}/list
          method: post
          cors: true
          authorizer: auth
  get_all_cases:
    handler: handler.get_all_cases
    events:
      - http:
          path: case
          method: post
          cors: true
          authorizer: auth
  get_case:
      handler: handler.get_case
      events:
        - http:
            path: project/{id}/case/{cid}
            method: get
            cors: true
            authorizer: auth
  update_case:
    handler: handler.update_case
    timeout: 900 # default is 6
    events:
      - http:
          path: project/{id}/case/{cid}
          method: put
          cors: true
          authorizer: auth
  delete_casebase:
    handler: handler.delete_casebase
    events:
      - http:
          path: project/{id}/case
          method: delete
          cors: true
          authorizer: auth
  delete_case:
    handler: handler.delete_case
    events:
      - http:
          path: project/{id}/case/{cid}
          method: delete
          cors: true
          authorizer: auth
  re_create_config:
    handler: handler.re_create_config
    events:
      - http:
          path: config/create
          method: get
          cors: true
          authorizer: auth
  get_config:
    handler: handler.get_config
    events:
      - http:
          path: config
          method: get
          cors: true
          authorizer: auth
  save_config:
    handler: handler.update_config
    events:
      - http:
          path: config
          method: post
          cors: true
          authorizer: auth
  check_ontology_sim:
    handler: handler.check_ontology_sim
    events:
      - http:
          path: ontology_sim/{ontology_id}
          method: get
          cors: true
          authorizer: auth
  retrieve:
    handler: handler.cbr_retrieve
    events:
      - http:
          path: retrieve
          method: post
          cors: true
          authorizer: auth
  reuse:
    handler: handler.cbr_reuse
    events:
      - http:
          path: reuse
          method: post
          cors: true
          authorizer: auth
  revise:
    handler: handler.cbr_revise
    events:
      - http:
          path: revise
          method: post
          cors: true
          authorizer: auth
  retain:
    handler: handler.cbr_retain
    events:
      - http:
          path: retain
          method: post
          cors: true
          authorizer: auth
  explain:
    handler: handler.retrieve_explain
    events:
      - http:
          path: explain
          method: post
          cors: true
          authorizer: auth
  update_attribute_options:
    handler: handler.update_attribute_options
    events:
      - http:
          path: project/{id}/options
          method: post
          cors: true
          authorizer: auth
  all_tokens:
    handler: handler.all_tokens
    events:
      - http:
          path: token
          method: get
          cors: true
          authorizer: auth
  new_token:
    handler: handler.new_token
    events:
      - http:
          path: token
          method: post
          cors: true
          authorizer: auth
  delete_token:
    handler: handler.delete_token
    events:
      - http:
          path: token/{id}
          method: delete
          cors: true
          authorizer: auth
plugins:
  - serverless-python-requirements
  - serverless-offline
custom:
  serverless-offline: 
    useChildProcesses: true
  pythonRequirements:
    dockerizePip: true
